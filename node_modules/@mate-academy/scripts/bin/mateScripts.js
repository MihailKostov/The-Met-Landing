#!/usr/bin/env node

"use strict";var t=require("commander"),s=require("child_process"),e=require("fs"),i=require("path"),o=require("fs-extra"),n=require("open");function r(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}var a=r(e),c=r(i),l=r(o),p=r(n);const h="@mate-academy/scripts";var u="0.8.10";function d(t,e=!0,i=process.cwd()){let o={stdio:"ignore"};e&&(o={stdio:"inherit",cwd:i});const n=s.execSync(t,o);return n?n.toString():n}function m(t,s=!0){try{return d(t,s)}catch(t){process.exit(1)}}const g={shouldBindStdout:!0,cwd:process.cwd()};function y(t,e=g){const{shouldBindStdout:i=!0,cwd:o}=e;return new Promise(((e,n)=>{const r={cwd:o},a=s.exec(t,r);let c="";i&&(a.stdout&&a.stdout.on("data",(t=>{c+=t.toString(),console.log(t)})),a.stderr&&a.stderr.on("data",(t=>{console.error(t)}))),a.on("close",(s=>{s>0?n(new Error(`${t}, errorCode: ${s}`)):e(c)}))}))}const f={html:!0,bem:!0,styles:!0,javascript:!0};var w;!function(t){t.None="none",t.Layout="layout",t.LayoutDOM="layoutDOM",t.Javascript="javascript",t.Typescript="typescript",t.React="react",t.ReactTypescript="reactTypescript"}(w||(w={}));function D(t){switch(t){case w.Layout:return f;case w.LayoutDOM:case w.Javascript:case w.Typescript:case w.React:case w.ReactTypescript:return{...f,bem:!1};case w.None:return f}}function j(){let t=process.cwd(),s=a.default.readdirSync(t);try{for(;!S(s)||!v(t);){if(R(t))throw new Error("Command should be run inside project folder with @mate-academy/scripts as devDependency");t=c.default.join(t,"../"),s=a.default.readdirSync(t)}}catch(s){console.error(s.message),t=process.cwd()}return t}function S(t){return t.includes("package.json")}function v(t){if("test"===process.env.NODE_ENV)return!0;let s;try{const e=a.default.readFileSync(c.default.join(t,"package.json"),{encoding:"utf-8"});s=JSON.parse(e)}catch(t){s=null}return s&&s.devDependencies&&s.devDependencies["@mate-academy/scripts"]}function R(t){return"/"===t}function b(t){const{mateAcademy:s}=JSON.parse(a.default.readFileSync(c.default.join(t,"package.json"),{encoding:"utf-8"})),e=s||{},i=e.linters||{},o=((t=w.None)=>({projectType:t,linters:{...D(t)}}))(e.projectType);return{...o,...e,linters:{...o.linters,...i}}}function k(t){return Object.entries(t).filter((([,t])=>"boolean"!=typeof t||t)).reduce(((t,[s,e])=>`${t} --${s}${"boolean"==typeof e?"":` ${e}`}`),"")}class ${constructor(t){this.versionString=t,this.validate();const[s,e,i]=this.getParts();this.major=s,this.minor=e,this.patch=i}static fromVersionString(t){return new $(t)}static fromVersionList(t){const s=this.getVersionStringFromVersionList(t);return new $(s)}isHigher(t){return!t||(this.major>t.major||!(this.major<t.major)&&(this.minor>t.minor||!(this.minor<t.minor)&&(this.patch>t.patch||(this.patch,t.patch,!1))))}static getVersionStringFromVersionList(t){return(s=t.split("@"))[s.length-1];var s}validate(){const t=this.versionString.split(".");3!==t.length&&$.throwSemverError();t.every((t=>!Number.isNaN(Number(t))))||$.throwSemverError()}getParts(){return this.versionString.split(".").map(Number)}static throwSemverError(){throw new Error("Semver should contain 3 numbers divided with point(.)")}}var T,P,O,N,E,L,C;class I{constructor(t){this.logNoImplementationWarning=()=>{console.warn(`No implementation for command ${this.constructor.name} for ${this.config.projectType} project`)},this[T]=this.logNoImplementationWarning,this[P]=this.logNoImplementationWarning,this[O]=this.logNoImplementationWarning,this[N]=this.logNoImplementationWarning,this[E]=this.logNoImplementationWarning,this[L]=this.logNoImplementationWarning,this[C]=this.logNoImplementationWarning,this.rootDir=t,this.binDir=c.default.join(t,"node_modules/.bin/"),this.config=b(t)}async run(t){this.checkProjectType();try{await this.common(t),await this[this.config.projectType](t)}catch(t){process.exit(1)}}checkProjectType(){this.config.projectType===w.None&&I.logProjectTypeWarning()}static logProjectTypeWarning(){console.warn('package.json should contain\n{\n  ...\n  "mateAcademy": {\n    "projectType": "layout" | "javascript" | "react" | "reactTypescript" | "typescript" | "layoutDOM"\n  }\n}\n')}child(t){return new t(this.rootDir)}}T=w.None,P=w.Layout,O=w.LayoutDOM,N=w.Javascript,E=w.Typescript,L=w.React,C=w.ReactTypescript;class V{constructor(t){return this.rootDir=t,this.configPath=c.default.join(this.rootDir,"./backstopConfig.js"),this.dataDir=c.default.join(this.rootDir,"backstop_data"),this.referencesDir=c.default.join(this.dataDir,"bitmaps_reference"),this.testResultsDir=c.default.join(this.dataDir,"bitmaps_test"),this.binDir=c.default.join(this.rootDir,"node_modules/.bin/"),this.reportDir=this.dataDir,V.__instance||(V.__instance=this),V.__instance}test(){l.default.existsSync(this.configPath)&&(this.ensureReferences(),this.cleanTestResults(),this.run("test",{config:this.configPath}))}ensureReferences(){this.areReferencesExists()||this.loadReferences()}areReferencesExists(){return l.default.existsSync(this.referencesDir)}cleanTestResults(){l.default.removeSync(this.testResultsDir)}loadReferences(){l.default.existsSync(this.configPath)&&(this.cleanReference(),this.run("reference",{config:this.configPath}))}cleanReference(){l.default.removeSync(this.referencesDir)}run(t,s){const e=k(s);m(`${this.binDir}backstop ${t} ${e}`)}}class _{constructor(t){this.rootDir=t,this.baseOptions={"out-dir":c.default.join(this.rootDir,"dist")},this.source=c.default.join(this.rootDir,"src/index.html")}serve({showLogs:t,open:s}){const e={...this.baseOptions,open:s,port:8080};this.run("serve",e,"development",t)}build(t=!1){const s={...this.baseOptions,"public-url":"./"};this.run("build",s,"production",t)}run(t,s,e="development",i=!1){const o=k(s),n=`cross-env NODE_ENV=${e} npx parcel ${t} ${_.escapePathSpaces(this.source)} ${o}`;i&&console.log(n),d(n,i)}static escapePathSpaces(t){return t.replace(" ","\\ ")}}class x{constructor(){this.binDir=c.default.join(j(),"node_modules/.bin/")}once(){return d(`${this.binDir}jest ./`)}watch(){return d(`${this.binDir}jest ./ --watch`)}}const M={envs:{local:!0,global:!1},silent:!1},G={isGlobal:!1,versionString:"",silent:!1};class B{constructor(t){this.packageName=t}async ensure({envs:t=M.envs,silent:s=M.silent}=M){const e=await this.getVersions();t.local&&!e.local&&await this.install({silent:s}),t.global&&!e.global&&await this.install({silent:s,isGlobal:!0})}async update({envs:t=M.envs,silent:s=M.silent}=M){const e=await this.getVersions();t.local&&e.available.isHigher(e.local)&&await this.install({silent:s}),t.global&&e.available.isHigher(e.global)&&await this.install({silent:s,isGlobal:!0})}async install({isGlobal:t=G.isGlobal,versionString:s=G.versionString,silent:e=G.silent}=G){let i=s;if(!i){i=(await this.getVersions()).available.versionString}if(!e){const s=await this.getVersions(),e=s[t?"global":"local"];console.log(`Update ${t?"global":"local"} ${this.packageName} from ${(null==e?void 0:e.versionString)||'"none"'} to ${s.available.versionString}`)}await y(`npm i ${t?"-g":""} ${this.packageName}@${i}`,{shouldBindStdout:!1})}async getVersions(){return this._versions||await this.setVersions(),this._versions}async setVersions(){const[t,s,e]=await Promise.all([this.getAvailableVersion(),this.getGlobalVersion(),this.getLocalVersion()]);this._versions={available:t,global:s,local:e}}async getAvailableVersion(){const t=await y(`npm view ${this.packageName} version`);return $.fromVersionString(t)}async getGlobalVersion(){return this.getInstalledVersion(!0)}async getLocalVersion(){return this.getInstalledVersion()}async getInstalledVersion(t=!1,s=0){try{const e=await y(`npm ls ${t?"-g":""} --deps=${s} ${this.packageName} version`);return $.fromVersionList(e)}catch(t){return null}}}class H extends I{constructor(t){super(t),this.gitHooksDestinationDir=c.default.join(this.rootDir,"./.git/hooks"),this.layout=async()=>{this.copyGitIgnore(w.Layout),this.copyProjectTypeSpecificConfigs(w.Layout),this.initGitHooks(w.Layout),await this.ensureCrossEnvInstalled()},this.layoutDOM=async()=>{this.copyGitIgnore(w.LayoutDOM),this.copyProjectTypeSpecificConfigs(w.LayoutDOM),this.initGitHooks(w.LayoutDOM),await this.ensureCrossEnvInstalled()},this.javascript=()=>{this.copyGitIgnore(w.Javascript),this.copyProjectTypeSpecificConfigs(w.Javascript),this.initGitHooks(w.Javascript)},this.crossEnvPackageService=new B("cross-env")}common(){this.copyCommonConfigs()}copyCommonConfigs(){const t=c.default.join(H.configsDir,"common");l.default.copySync(t,this.rootDir)}copyGitIgnore(t){const s=".gitignore";l.default.copySync(c.default.join(H.configsDir,"gitignoreTemplates",`.gitignore.${t}`),c.default.join(this.rootDir,s)),console.log(".gitignore copied")}copyProjectTypeSpecificConfigs(t){const s=c.default.join(H.configsDir,t);l.default.copySync(s,this.rootDir),console.log(`${t} specific configs copied`)}initGitHooks(t){const s=c.default.join(H.gitHooksSourceDir,t);l.default.readdirSync(s).forEach((t=>this.initGitHook(s,t))),console.log("Git hooks installed")}initGitHook(t,s){const e=c.default.join(t,s),i=c.default.join(this.gitHooksDestinationDir,s);l.default.copySync(e,i),console.log(`Git ${s} hook installed`)}async ensureCrossEnvInstalled(){await this.crossEnvPackageService.ensure({silent:!1}),console.log("Cross-env installed")}}H.configsDir=c.default.join(__dirname,"../configs"),H.gitHooksSourceDir=c.default.join(H.configsDir,"git-hooks");class A{constructor(t){this.rootDir=t,this.shouldOpen=!0,this.shouldShowLogs=!1,this.reportsDir=c.default.join(this.rootDir,"reports"),this.rawReportsDir=c.default.join(this.rootDir,"raw_reports"),this.mergedReport=c.default.join(this.reportsDir,"report.json"),this.binDir=c.default.join(this.rootDir,"node_modules/.bin/")}async run(t){this.processOptions(t),this.log("CYPRESS RUN CALLED",t),await this.cleanPrevReports(),this.log("OLD REPORTS REMOVED");let s=!1;try{this.log("RUN CYPRESS"),await this.runCypress(),this.log("CYPRESS TESTS RUN SUCCESS")}catch(t){this.log("CYPRESS TESTS RUN FAIL",t),s=!0}finally{const t=await this.prepareReports();this.log("TEST REPORTS PREPARED",t),t&&this.shouldOpen?(this.log("OPEN REPORTS IN BROWSER"),await this.openReportInBrowser()):this.log("SKIP OPEN REPORTS IN BROWSER ACCORDING"),s&&process.exit(1)}}processOptions(t={}){const{showLogs:s=!1,open:e=!0}=t;this.shouldOpen=e,this.shouldShowLogs=s}async cleanPrevReports(){await Promise.all([this.cleanReports(),this.cleanRawReports()])}async cleanReports(){await l.default.remove(this.reportsDir)}async cleanRawReports(){await l.default.remove(this.rawReportsDir)}runCypress(){return y(`${this.binDir}cypress run`,{shouldBindStdout:this.shouldShowLogs})}async prepareReports(){return await this.hasRawReports()?(await this.makeReportsDir(),await this.mergeReports(),await this.generateHtmlReport(),await this.cleanRawReports(),!0):(this.log("REPORTS WAS NOT CREATED DURING TEST RUN. SKIP REPORTS PREPARING"),await this.cleanRawReports(),!1)}async hasRawReports(){if(!await l.default.pathExists(this.rawReportsDir))return!1;return(await l.default.readdir(this.rawReportsDir)).length>0}async makeReportsDir(){await l.default.mkdir(this.reportsDir)}async mergeReports(){const t=c.default.join(this.rawReportsDir,"*.json");await y(`${this.binDir}mochawesome-merge "${t}" > ${this.mergedReport}`,{shouldBindStdout:this.shouldShowLogs})}async generateHtmlReport(){await y(`${this.binDir}marge -o ${this.reportsDir} ${this.mergedReport}`,{shouldBindStdout:this.shouldShowLogs})}async openReportInBrowser(){await p.default(`file://${c.default.join(this.reportsDir,"report.html")}`)}log(t,s){this.shouldShowLogs&&(s?console.log(t,s):console.log(t))}}class J extends I{constructor(){super(...arguments),this.parcel=new _(this.rootDir),this.layout=t=>{l.default.removeSync(c.default.join(this.rootDir,"dist")),this.parcel.build(t.shouldShowInternalLogs)},this.layoutDOM=t=>{this.layout(t)}}common(){}}class W extends I{constructor(){super(...arguments),this.layout=async()=>{await y("npm i -D @mate-academy/scripts");const t=await this.getPackage();t.scripts=W.scripts.layout,delete t["lint-staged"],delete t.husky,await e.promises.writeFile(c.default.join(this.rootDir,"package.json"),JSON.stringify({...t,...W.mateConfig.layout},null,2)),await Promise.all([W.safeRun(l.default.copy(c.default.join(this.rootDir,"config/backstop/backstopConfig.js"),c.default.join(this.rootDir,"backstopConfig.js"))),W.safeRun(l.default.remove(c.default.join(this.rootDir,"config"))),W.safeRun(l.default.remove(c.default.join(this.rootDir,"server.js"))),W.safeRun(l.default.remove(c.default.join(this.rootDir,".travis.yml"))),W.safeRun(l.default.remove(c.default.join(this.rootDir,"gulpfile.js"))),W.safeRun(l.default.remove(c.default.join(this.rootDir,".linthtmlrc")))]),await y("npm rm @linthtml/gulp-linthtml gulp-autoprefixer gulp-clean gulp-eslint gulp-replace-path gulp-sass gulp-sourcemaps gulp-stylelint gulp @mate-academy/browsersync-config htmllint htmllint-cli husky lint-staged rimraf @mate-academy/htmllint-config"),await y("npm i -D @linthtml/linthtml stylelint-scss @mate-academy/linthtml-config node-sass parcel"),await y("npm i")},this.layoutDOM=async()=>{const t=await this.getPackage();await e.promises.writeFile(c.default.join(this.rootDir,"package.json"),JSON.stringify({...t,...W.mateConfig.layoutDOM},null,2)),await y("npm rm backstopjs @mate-academy/backstop-config gulp-htmllint"),await y(`rm -rf ${c.default.join(this.rootDir,"backstopConfig.js")}`),await y("npm i -D cypress eslint-plugin-cypress mochawesome mochawesome-merge mochawesome-report-generator"),await y(`mkdir ${c.default.join(this.rootDir,"cypress")}`),await y(`mkdir ${c.default.join(this.rootDir,"cypress","integration")}`),await y(`cp ${c.default.join(__dirname,"../","configs","custom",w.LayoutDOM,"page.spec.js")} ${c.default.join(this.rootDir,"cypress","integration","page.spec.js")}`),await y("npm i")},this.javascript=async()=>{await y("npm i -D @mate-academy/scripts");const t=await this.getPackage();t.scripts=W.scripts.javascript,delete t["lint-staged"],delete t.husky,await e.promises.writeFile(c.default.join(this.rootDir,"package.json"),JSON.stringify({...t,...W.mateConfig.javascript},null,2)),await W.safeRun(l.default.remove(c.default.join(this.rootDir,".travis.yml"))),await y("npm rm husky lint-staged"),await y("npm i"),await y(`${this.binDir}eslint ./ --fix`)},this.react=()=>{},this.reactTypescript=()=>{}}async common(t){await this[t.projectType]()}async getPackage(){const t=await l.default.readFile(c.default.join(this.rootDir,"package.json"),{encoding:"utf-8"});return JSON.parse(t)}static async safeRun(t){try{await t}catch(t){console.error("Migration error",t)}return!0}}W.scripts={layout:{init:"mate-scripts init",start:"mate-scripts start",lint:"mate-scripts lint","test:only":"mate-scripts test",build:"mate-scripts build",deploy:"mate-scripts deploy",update:"mate-scripts update",postinstall:"npm run update",test:"npm run lint && npm run test:only"},javascript:{init:"mate-scripts init",start:"mate-scripts start",lint:"mate-scripts lint","test:only":"mate-scripts test",update:"mate-scripts update",postinstall:"npm run update",test:"npm run lint && npm run test:only"}},W.mateConfig={[w.None]:null,[w.Layout]:{mateAcademy:{projectType:w.Layout}},[w.LayoutDOM]:{mateAcademy:{projectType:w.LayoutDOM}},[w.Javascript]:{mateAcademy:{projectType:w.Javascript}},[w.React]:{mateAcademy:{projectType:w.React}},[w.ReactTypescript]:{mateAcademy:{projectType:w.ReactTypescript}},[w.Typescript]:{mateAcademy:{projectType:w.Typescript}}};const F=new t.Command,U=new class{constructor(){this.rootDir=j()}make(t,s,e=!1){const i=new t(e?process.cwd():this.rootDir);return s?(...t)=>{const e=t.pop(),o=s(e,...t);return i.run(o)}:()=>i.run()}};F.name("mate-scripts").version(u,"-v --version","output current version"),F.command("init").description("init linters and configs").action(U.make(H)),F.command("start").option("-l, --logs","show internal commands logs",!1).option("-o, --open","open web browser after start",!0).description("run development server").action(U.make(class extends I{constructor(){super(...arguments),this.parcel=new _(this.rootDir),this.jest=new x,this.layout=t=>{this.parcel.serve({showLogs:t.shouldShowInternalLogs,open:t.open})},this.layoutDOM=t=>{this.layout(t)},this.javascript=()=>{this.jest.watch()}}common(){}},(t=>{const{logs:s,open:e}=t;return{shouldShowInternalLogs:s,open:e}}))),F.command("lint [files...]").option("-s, --styles","lint styles only",!1).option("-h, --html","lint html (markup-style) only",!1).option("-b, --bem","lint html (BEM) only",!1).option("-j, --javascript","lint javascript only",!1).description("lint html, css and js files").action(U.make(class extends I{constructor(t){super(t),this.layout=t=>{const{html:s,bem:e,files:i,styles:o,javascript:n}=t,{linters:r}=this.config;s&&r.html&&this.lintHtml(i),e&&r.bem&&this.lintBem(i),o&&r.styles&&this.lintStyles(i),n&&r.javascript&&this.lintJs(i)},this.layoutDOM=t=>{this.layout(t)},this.javascript=t=>{const{javascript:s,files:e}=t;s&&this.lintJs(e)}}common(t){}lintHtml(t){const s=t?t.join(" "):"./src/**/*.html";m(`${this.binDir}linthtml ${s}`)}lintBem(t){const s=t?t.join(" "):"./src";m(`${this.binDir}bemlint ${s}`)}lintStyles(t){const s=t?t.join(" "):"./src/**/*.css ./src/**/*.scss";m(`${this.binDir}stylelint ${s}`)}lintJs(t){const s=t?t.join(" "):"./src";m(`${this.binDir}eslint ${s}`)}},((t,s)=>{const{styles:e,html:i,bem:o,javascript:n}=t,r=s&&s.length?s:null;return e||i||n||o?{styles:e,html:i,bem:o,javascript:n,files:r}:{styles:!0,html:!0,bem:!0,javascript:!0,files:r}}))),F.command("test").option("-n, --not-open","should open test report in browser",!1).option("-l, --logs","should log details to console during run",!1).description("run tests").action(U.make(class extends I{constructor(){super(...arguments),this.backstop=new V(this.rootDir),this.jest=new x,this.cypress=new A(this.rootDir),this.layout=()=>{this.backstop.test()},this.layoutDOM=t=>{this.cypress.run(t)},this.javascript=()=>{this.jest.once()},this.typescript=()=>{this.jest.once()}}common(){}},(t=>{const{"not-open":s,logs:e}=t;return{open:!s,showLogs:e}}))),F.command("build").description("create production ready build").option("-l, --logs","show internal commands logs",!1).action(U.make(J)),F.command("deploy").option("-l, --logs","show internal commands logs",!1).description("deploy application to gh-pages").action(U.make(class extends I{constructor(){super(...arguments),this.buildCommand=this.child(J),this.destinationDir=c.default.join(this.rootDir,"dist"),this.packageDir=c.default.join(this.rootDir,"node_modules","@mate-academy","scripts"),this.deployScriptFile=c.default.join(this.packageDir,"bash-scripts","deploy-layout.sh"),this.backstop=new V(this.rootDir),this.layout=async t=>{await this.setShellRunner();const{shouldShowInternalLogs:s}=t;await this.buildCommand.run({shouldShowInternalLogs:s}),console.log("Start deploy to gh-pages. Please wait, it may take up to minute.\n");try{this.copyHtmlReport(),this.commitBuild(s),this.runDeployBashScript(s),console.log("[32mSuccessfully deployed to gh-pages!\n[0m")}catch(t){console.error("[31mDeploy error: ",t.message,"[0m")}},this.layoutDOM=async t=>{await this.setShellRunner();const{shouldShowInternalLogs:s}=t;await this.buildCommand.run({shouldShowInternalLogs:s}),console.log("Start deploy to gh-pages. Please wait, it may take up to minute.\n");try{this.runDeployBashScript(s),console.log("[32mSuccessfully deployed to gh-pages!\n[0m")}catch(t){console.error("[31mDeploy error: ",t.message,"[0m")}}}common(t){}async setShellRunner(){try{await y("sh --version",{shouldBindStdout:!1}),this.shellRunner="sh"}catch(t){try{await y("bash --version",{shouldBindStdout:!1}),this.shellRunner="bash"}catch(t){try{await y("zsh --version",{shouldBindStdout:!1}),this.shellRunner="zsh"}catch(t){console.error('[31mDeploy skipped\nPlease run deploy in "Git bash" terminal',"[0m"),process.exit(0)}}}}copyHtmlReport(){try{l.default.copySync(c.default.join(this.backstop.reportDir),c.default.join(this.destinationDir,"./report"))}catch(t){console.error("[33mWarning: No html_report[0m")}}commitBuild(t){d(`git add ${this.destinationDir} -f`,t),d('git commit -m "make build" --no-verify',t)}runDeployBashScript(t){d(`${this.shellRunner} ${this.deployScriptFile} dist`,t,this.rootDir)}},(t=>{const{logs:s}=t;return{shouldShowInternalLogs:s}}))),F.command("update").description("update @mate-academy/scripts").action(U.make(class extends I{constructor(t){super(t),this.layout=()=>{},this.layoutDOM=()=>{},this.javascript=()=>{},this.react=()=>{},this.reactTypescript=()=>{},this.mateScriptsPackageService=new B(h)}async common(){await this.updateMateScriptsVersions(),console.log("versions updated successfully"),d(`${this.binDir}mate-scripts init`),console.log("init command success")}async updateMateScriptsVersions(){await this.mateScriptsPackageService.update({envs:{global:!0,local:!0}})}})),F.command("migrate <type>").description("(global) migrate project to @mate-academy/scripts").action(U.make(W,((t,s)=>({projectType:s})),!0)),F.parse(process.argv);
